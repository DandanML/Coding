/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if (l1==NULL ||l2==NULL) return l1?l1:l2;
        ListNode* head = new ListNode((l1->val+l2->val)%10);
        ListNode* cur = head;
        ListNode* head1 = l1->next;
        ListNode* head2 = l2->next;
        int carryover = (l1->val + l2->val)/10;
        while(head1!=NULL || head2!=NULL){
             int value = (head1? head1->val:0) + (head2?head2->val:0) + carryover;
             ListNode* temp = new ListNode(value%10);
             carryover = value/10;
             cur->next = temp;
             cur = cur->next;
             head1 = head1? head1->next:head1;
             head2 = head2? head2->next:head2;
        }
        if (carryover==1){  //Note that if there is carryover bit after going over all the numbers in the list, we will need to add an additional 1 into the list.
            ListNode *temp = new ListNode(carryover);
            cur->next = temp;
        }
        return head;
    }
};
