/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        if (l1 == NULL) return l2;
        if (l2 == NULL) return l1;
        ListNode* head = new ListNode((l1->val + l2->val)%10);
        int carryon = (l1->val + l2->val) / 10;
        ListNode* cur = head;
        ListNode* cur1 = l1->next;
        ListNode* cur2 = l2->next;
        while(cur1!=NULL || cur2!=NULL) {
            int sum = ((cur1!=NULL) ? cur1->val : 0) + ((cur2!=NULL) ? cur2->val : 0) + carryon;
            ListNode* node = new ListNode(sum%10);
            carryon = sum/10;
            cur->next = node;
            cur = cur->next;
            if(cur1!=NULL) cur1 = cur1->next;
            if(cur2!=NULL) cur2 = cur2->next;
        }
        if (carryon!=0){
            ListNode* node = new ListNode(carryon);
            cur->next = node;
        } 
        return head;
    }
};
