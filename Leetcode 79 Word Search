class Solution {
public:
    bool exist(vector<vector<char>>& board, string word) {
        for (int i = 0; i < board.size(); i++) {
            for (int j = 0; j < board[0].size(); j++) {
                //loop through every element to check whether the word exist starting from this element.
                if (search(board, word, i, j, 0)) {
                    return true;
                }
            }
        }
        return false;        
    }
private:
    bool search (vector<vector<char>>& board, string word, int i, int j, int index) {
        if (i < 0 || j < 0 || i >= board.size() || j >=board[0].size()) return false;
        if (board[i][j] != word[index]) return false;
        if (board[i][j] == word[index] && index == word.size()-1) return true;
        char temp = board[i][j];
        board[i][j] = '#'; //note that we need to use some special char to avoid visiting the same element multiple times.
        bool res = search(board, word, i, j+1, index+1) || search(board, word, i, j-1, index+1)
            ||search(board, word,i+1, j, index+1)||search(board, word, i-1, j, index+1);
        board[i][j] = temp;
        return res;
    }
};
