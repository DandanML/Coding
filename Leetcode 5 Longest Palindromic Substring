1), Dynanmic programming solution. 

class Solution {
public:
    string longestPalindrome(string s) {
        bool dp[s.size()][s.size()];
        int max = 0;
        string res = "";
        for (int j = 0; j < s.size(); j++) { //j represents the ending position of the substring. 
            for (int i = 0; i <= j; i++){
                dp[i][j] = (s[i]==s[j]) && ((i+1 > j-1) || dp[i+1][j-1]);
                if (dp[i][j] && j - i + 1 > max){
                    max = j - i + 1;
                    res = s.substr(i, j - i + 1);
                }
            }
        }
        return res;
    }
};

2). middle point check. 
